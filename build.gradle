buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.1'
    }
}

repositories {
    jcenter()
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = "0.1"
group = "com.nabto.android"

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 25
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    testCompile 'org.powermock:powermock-api-mockito:1.6.6'
    testCompile 'org.powermock:powermock-module-junit4:1.6.6'
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'

                name 'com.nabto.android:nabto-api'
                description = 'Nabto Client API for Android'
                url 'https://github.com/nabto/android-client-api'

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                scm {
                    connection 'https://github.com/nabto/android-client-api.git'
                    developerConnection 'https://github.com/nabto/android-client-api.git'
                    url 'https://github.com/nabto/android-client-api'
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    configurations = ['archives']
    pkg {
        repo = "android"
        name = "com.nabto.android:nabto-api"
        desc = 'Nabto Client API for Android'
        websiteUrl = 'https://github.com/nabto/android-client-api'
        issueTrackerUrl = 'https://github.com/nabto/android-client-api/issues'
        vcsUrl = 'https://github.com/nabto/android-client-api.git'
        licenses = ["Apache-2.0"]
        labels = ['Nabto', 'IoT', 'Java', 'Android']
        publish = true
        version {
            released  = new Date()
        }
    }
}
